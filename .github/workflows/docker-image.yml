name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main  # 메인 브랜치에 푸시될 때 실행

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    # 1. GitHub에서 코드 체크아웃
    - name: Checkout code
      uses: actions/checkout@v2

    # 2. Docker Hub에 로그인
    - name: Log in to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    # 3. Docker 이미지 빌드 및 태그
    - name: Build and tag Docker image
      run: |
        docker build --no-cache -t ${{ secrets.DOCKER_HUB_USERNAME }}/kws_fe:latest .
        docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/kws_fe:latest ${{ secrets.DOCKER_HUB_USERNAME }}/kws_fe:latest

    # 4. Docker Hub로 푸시
    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/kws_fe:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Install SSH and sshpass
      run: |
        sudo apt-get update
        sudo apt-get install -y openssh-client sshpass

    # 5. SSH 접속 및 Docker 이미지 Pull & Run
    - name: Deploy to Server
      env:
        IMAGE: "${{ secrets.DOCKER_HUB_USERNAME }}/kws_fe:latest"
        SSH_HOST: "${{ secrets.SSH_ID }}@${{ secrets.SSH_SERVER_IP }}"
        SSH_PORT: "${{ secrets.SSH_PORT }}"
        SSH_PASSWORD: "${{ secrets.SSH_PASSWORD }}"
      run: |
        echo "Starting deployment..."
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no -p $SSH_PORT $SSH_HOST <<EOF
          IMAGE="$IMAGE"
          echo "$SSH_PASSWORD" | sudo -S docker pull $IMAGE
          echo "$SSH_PASSWORD" | sudo -S docker stop KWS_FE || true
          echo "$SSH_PASSWORD" | sudo -S docker rm KWS_FE || true
          echo "$SSH_PASSWORD" | sudo -S docker run -d --name KWS_FE -p 25120:8000 $IMAGE
          echo "$SSH_PASSWORD" | sudo -S docker system prune -af
        EOF
